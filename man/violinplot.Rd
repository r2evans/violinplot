% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/violinplot.R
\name{violinplot}
\alias{violinplot}
\alias{violinplot.data.frame}
\alias{violinplot.default}
\alias{violinplot.formula}
\alias{violinplot.list}
\alias{violinplot.matrix}
\title{Violin Plots}
\usage{
violinplot(x, ...)

\method{violinplot}{matrix}(x, ...)

\method{violinplot}{data.frame}(x, ...)

\method{violinplot}{list}(x, ...)

\method{violinplot}{formula}(formula, data = NULL, ..., na.action = NULL,
  drop.unused = FALSE)

\method{violinplot}{default}(x, ..., at = NULL, width = 1, names = NULL,
  col = NULL, border = 1, groups = NULL, group.spacers = 1,
  group.labels = NULL, group.lines = TRUE, density.auto = TRUE,
  density.scale = TRUE, density.ticks = TRUE, density.args = NULL,
  boxplot.args = TRUE, legend.args = NULL, grid.args = TRUE,
  text.cex = 1, mar = FALSE, add = FALSE)
}
\arguments{
\item{x}{for specifying data from which the violin plots (and
optionally boxplots) are to be produced. Either a numeric vector,
a single list containing such vectors, or a data.frame or matrix
(where columns are the vectors to be used). Additional unnamed
arguments specify further data as separate vectors (each
corresponding to a component violin plot with or without a
corresponding boxplot). \code{NA}s are allowed in the data.}

\item{...}{Unnamed arguments ('default' method only) are additional
data vectors; for all other methods, unnamed arguments are
ignored. Named arguments are passed through to the 'default'
method and optionally to \code{\link{plot}}.}

\item{formula}{a formula, such as \code{y ~ grp}, where \code{yh}
is a numeric vector of data values to be split into groups
according to the grouping variable(s) \code{grp}. Also supported
is \code{~ grps} and \code{~ .}, which is analogous to choosing
select columns of the data.frame.}

\item{data}{data.frame or list from which the variables in
\code{formula} should be taken.}

\item{na.action}{passed to \code{\link{model.frame}}}

\item{drop.unused}{passed to \code{\link{model.frame}}}

\item{at}{numeric vector giving the locations where the violin
plots should be drawn, particularly when \code{add = TRUE};
defaults to \code{1:n} for the default, "matrix", and
"data.frame" methods, and spaced for the "formula" method (see
\code{spacer.type}).}

\item{width}{numeric, how wide the violin plot can extend where "1"
means two neighboring plots may touch but not overlap; greater
than 1 and overlap may occur, less than 1 and there will always
be space between neighboring violin plots.}

\item{names}{character vector of names to be printed under the
plots; if missing, the names will be derived from \code{groups}
(if not null), the column names of a matrix or data.frame (if
provided), or variables (if a formula).}

\item{col}{if not \code{NULL} then it is assumed to contain colors
to be used to color the bodies of the violin plots. If the length
is less than the number of plots, then the colors will be
recycled; in the "formula" method, the length should be the
length of the last factor, and it will be recycled "smartly"
(taking into account empty plots). Note: this does not affect the
boxplots: use \code{boxplot = list(col = c(...))} to affect them.}

\item{border}{an optional vector of colors for the outlines of the
violin plots. As with \code{col}, the values in \code{border} are
recycled. Note: does not affect boxplots, use \code{boxplot =
list(border = c(...))} to change them.}

\item{groups}{for internal use only (calls between methods), a list
for assigning groups and levels of the data. (Internally, the
structure is a list of lists, where each element of the top-level
list represents a grouping level. Each grouping-level list
contains more lists, where each contains contiguous x positions
for that group.)}

\item{group.spacers}{numeric, the amount of space to be used for a
spacing between groups, defaults to 1 (same width as an
individual violin plot). When there are multiple levels
("formula" method), this vector has as many numbers as levels.}

\item{group.labels}{if logical and \code{TRUE}, plot labels under
all plots and groups (under lines, if present). If numeric, then
the levels under which to add labels. Defaults to \code{TRUE},
all groups.}

\item{group.lines}{if logical and \code{TRUE}, then lines are drawn
to visually group plots, for all but the lowest-level; if
numeric, indicating which of the levels to apply lines.}

\item{density.auto}{logical, whether to auto-scale the density
curves to the maximum density of all curves, default \code{TRUE}.}

\item{density.scale}{if logical and \code{TRUE}, include the scale
(+/- percentages) for the density scales; if a positive integer,
the columns (left-to-right) to show them on; if a negative
integer, right-to-left. Default \code{TRUE} (all).}

\item{density.ticks}{logical or integer, tick marks on each
grouping line (lowest level only). Default \code{TRUE}. This is
forced to \code{TRUE} if \code{density.scale} is not
\code{FALSE}.}

\item{density.args}{list of arguments to pass to
\code{\link{density}}. The parameter \code{n} has a default value
of 32 for simplifying the plots, but it may be overridden with
this argument. If not a list, then the actual value is ignored.}

\item{boxplot.args}{list of arguments to pass to
\code{\link{boxplot}}. The following parameters have defaults to
prevent plotting of the frame, axes, etc as well as for
reasonable aesthetic defaults: \code{pars}, \code{frame.plot},
\code{main}, \code{xlab}, \code{ylab}, \code{xaxt}, \code{yaxt},
\code{add}. Providing any of these arguments overrides the
defaults. If \code{TRUE}, all defaults are used and boxplots are
plotted. If \code{FALSE} or \code{NULL}, boxplots are not
plotted.}

\item{legend.args}{list of arguments to pass to
\code{\link{legend}}. Parameters \code{xpd} and \code{horiz} are
predefined with defaults. If \code{TRUE} (the default), a legend
is plotted in the top left corner, horizontally. If \code{FALSE}
or \code{NULL}, no legend is printed.}

\item{grid.args}{list of arguments to pass to \code{\link{grid}}.
If \code{TRUE}, horizontal gray lines are plotted. If
\code{FALSE} or \code{NULL}, grid is not called.}

\item{text.cex}{numeric, cex to use for group labels; the scale (if
\code{density.scale} is TRUE) is shown at 70\% of this.}

\item{mar}{if logical and \code{TRUE}, calculate the margins based
on the presence of \code{main}, \code{group.labels}, and
\code{legend}; if numeric, the margins will be assigned to this
value. (The calculation does not adjust the side margins if using
"left" or "right" for the position of \code{legend}.) Default is
\code{FALSE}.}

\item{add}{logical, create a new plot or add to the existing
device. Default is \code{FALSE}.}
}
\value{
list of various parameters, invisibly
}
\description{
Produce violin (density) plots of the given (optionally grouped)
values. Optionally add slender superimposed boxplots.
}
\details{
The generic function \code{violinplot} currently has a default method
(\code{violinplot.default}), several helper methods (for "list", "matrix",
and "data.frame"), and a "formula" interface (\code{violinplot.formula}).

If multiple groups are supplied either as multiple arguments are
via a formula, parallel violin plots will be plotted, in the order
of the arguments or the order of the levels of the groups.

Missing values are ignored when forming violin plots.
}
\section{Methods (by class)}{
\itemize{
\item \code{matrix}: matrix method:

\item \code{data.frame}: data.frame method:

\item \code{list}: list method:

\item \code{formula}: "formula" method

\item \code{default}: default method:
}}
\examples{
\dontrun{

# default method
violinplot(mtcars$mpg)
violinplot(mtcars$mpg, col = 2)
violinplot(mtcars$mpg, col = 4, boxplot.args = FALSE)

# matrix method
m <- matrix(runif(99), ncol = 3)
violinplot(m, col = 2:4)
violinplot(m, col = 2:4, width = 1.5)

# data.frame method
violinplot(mtcars[,1:4], col = 2:9) # extra colors are silently discarded

# list method
l <- list(x1 = runif(100), x2 = rnorm(200, mean = 1))
violinplot(l)

# formula method
violinplot(mpg ~ cyl, data = mtcars, col = 2:4)
violinplot(mpg ~ cyl, data = mtcars, col = 2:4,
    legend.args = list(x = "bottomleft", bty = "n"))
violinplot(mpg ~ cyl + vs, data = mtcars, col = 2:4,
    group.labels = 2)
violinplot(mpg ~ cyl + vs, data = mtcars, col = 2:4,
    group.labels = 2, drop.unused = TRUE)

violinplot(~ ., data = mtcars) # same as violinplot(mtcars)

}
}
\seealso{
\code{\link{density}} which does much of the computation;
  \code{\link{boxplot}} for optional overlaid boxplots;
  \code{\link{legend}}; \code{\link{model.frame}}
}

